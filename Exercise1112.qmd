---
title: "Exercise1112"
author: "Aldair Perez"
date: 03-13-2025
format: html
execute: 
  echo: true
---

# Part 1
1.) The data has information about ozone, solar.r, wind, temperature in Fahrenheit, month number, and day number. There are 6 variables and 153 observations.

```{r}
library(tidyr)
library(dplyr)
library(flextable)
library(zoo)
library(broom)
install.packages("ggpubr", repos = "https://cloud.r-project.org/")
library(ggpubr)
library(ggplot2)
```

2.)
```{r}
airquality_condensed <- airquality %>%
     select(Ozone, Temp, Solar.R, Wind)
airquality_condensed <- na.omit(airquality_condensed)

shapiro.test(airquality_condensed$Wind)
```
Shapiro-Wilk normality test

data:  airquality_condensed$Wind
W = 0.98076, p-value = 0.1099

```{r}
shapiro.test(airquality_condensed$Ozone)
```

Shapiro-Wilk normality test

data:  airquality_condensed$Ozone
W = 0.87355, p-value = 2.846e-08
```{r}
shapiro.test(airquality_condensed$Temp)
```

Shapiro-Wilk normality test

data:  airquality_condensed$Temp
W = 0.98007, p-value = 0.09569
```{r}
shapiro.test(airquality_condensed$Solar.R)
```

Shapiro-Wilk normality test

data:  airquality_condensed$Solar.R
W = 0.93285, p-value = 2.957e-05

3.) The purpose of Shapiro-Wilk test is to test the normality of the data.

4.) The null hypothesis is the data is has a normal distribution, while the alternative hypothesis is the data is not normally distributed.

5.) The temp column has a p-value lower than 0.1, which means the data is relatively normally distributed. Wind, Ozone, and Solar.R have p-values over 1, so the data isn't normally distributed.

# Part 2
6.)
```{r}
airquality <- airquality %>%
     mutate(Season = case_when(
         Month %in% c(11, 12, 1) ~ "Winter",
         Month %in% c(2, 3, 4) ~ "Spring",
         Month %in% c(5, 6, 7) ~ "Summer",
         Month %in% c(8, 9, 10) ~ "Fall",
         TRUE ~ NA_character_
     ))
airquality <- na.omit(airquality)
```

7.) There are 52 observations in Fall, while Summer has 59 observations.
```{r}
table(airquality$Season)
```

# Part 3
8.) 
```{r}
install.packages("recipes", repos = "https://cloud.r-project.org/")
library(recipes)
recipe_data <- recipe(Ozone ~ Temp + Solar.R + Wind + Season, data = airquality) %>%
  step_normalize(Temp, Solar.R, Wind) %>%
  step_dummy(Season)
```

9.) Normalizing data helps us get an accurate way of presenting results and data. This ensures the data is refined for use, such as analysis.

10.) We use step_meanimpute() to impute the missing values with the mean.

11.)
```{r}
recipe_data <- recipe_data %>%
  step_impute_mean(Temp, Solar.R, Wind)
recipe_prep <- prep(recipe_data, training = airquality)
recipe_bake <- bake(recipe_prep, new_data = airquality)
```

12.) Prep the recipe helps us estimate the quantities and stats needed, while bake takes a trained recipe and apply the operations to a data set to make a matrix.

# Part 4
13.)
```{r}
model <- lm(Ozone ~ ., data = airquality)
summary(model)
```

14.) The coefficients from the summary include an estimate, standard error, t-value, and p-value. A low p-value (< 0.05) means a likelihood of rejecting the null hypothesis. The t-value represents the difference in of sample means relative to variation of sample.

# Part 5
15.)
```{r}
augmented_data <- augment(model, data = airquality)
```

16.)
```{r}
residuals <- model$residuals
hist(residuals,
     main = "Residual Histogram",
     xlab = "Residuals",
     col = "orange",
     border = "darkblue",
     breaks = 20)
```
```{r}
qqnorm(residuals,
       main = "Residual QQ Plot")
qqline(residuals, col = "green")
```

17.)
```{r}
hist_plot <- ggplot(data.frame(residuals), aes(x = residuals)) +
  geom_histogram(bins = 20, fill = "orange", color = "blue") +
  labs(title = "Residual Histogram", x = "Residuals", y = "Frequency") +
  theme_minimal()
```

```{r}
qq_plot <- ggplot(data.frame(residuals), aes(sample = residuals)) +
  geom_qq() +
  geom_qq_line(color = "red") +
  labs(title = "Residual QQ Plot") +
  theme_minimal()
```

```{r}
ggarrange(hist_plot, qq_plot, ncol = 2, nrow = 1)
```

I see that the histogram is a right skewed distribution, while the points on the QQ plot is close to the line of best fit, so the data is mostly accurate.

18.)
```{r}
predicted_values <- predict(model)
```

```{r}
plot_data <- data.frame(Actual = airquality$Ozone, Predicted = predicted_values)
```

```{r}
scatter_plot <- ggplot(plot_data, aes(x = Actual, y = Predicted)) +
  geom_point(color = "darkred", alpha = 0.6) +
  geom_abline(slope = 1, intercept = 0, color = "darkgreen", linetype = "dashed") +
  labs(title = "Actual v Predicted",
       x = "Actual Ozone",
       y = "Predict Ozone") +
  theme_minimal()
```

```{r}
print(scatter_plot)
```

19.) The model isn't very strong. The data points are scattered around and aren't close the the line of best fit. Therefore, the actual and predicted values have larger variations.